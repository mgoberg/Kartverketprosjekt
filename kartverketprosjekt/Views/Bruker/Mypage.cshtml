@model List<kartverketprosjekt.Models.SakModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Min Side";
}

<a asp-controller="Home" asp-action="Index">
    <i class='bx bx-chevron-left'></i>
</a>
<h1>Min Side</h1>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="dashboard">
    <div class="dashboard-box">
 <h2>Kontoinstillinger </h2>
        <!-- Form for Updating Name -->
        <form asp-controller="Bruker" asp-action="UpdateName" method="post">
            @Html.AntiForgeryToken() <!-- Ensure this is included for security -->
                <label for="Navn">Oppdater navnet ditt</label>
                <input type="text" id="Navn" name="navn" placeholder="Skriv inn nytt navn" required />
            <button type="submit" class="btn-primary">Oppdater Navn</button>
        </form>
        <!-- Endre Passord Form -->
        <form asp-controller="Bruker" asp-action="UpdatePassword" method="post">
            @Html.AntiForgeryToken()
                <label for="Password">Nytt passord:</label>
                <input type="password" id="Password" name="Password" placeholder="Skriv inn nytt passord" required />
            <button type="submit" class="btn-primary">Oppdater Passord</button>
        </form>

    </div>
    <style>
        .status-ikke-påbegynt {
            color: grey;
        }

        .status-in-progress {
            color: orange;
        }

        .status-completed {
            color: Green;
        }

        .status-closed {
            color: red;
        }

        .status-arkivert {
            color: Brown;
        }
    </style>
    <div class="table-container">
        <div class="dashboard-box">
            <h2>Oversikt over dine saker</h2>
            @if (Model != null && Model.Count > 0)
            {
                <ul>
                    @foreach (var sak in Model)
                    {
                        // Assign the appropriate CSS class based on the status
                        string statusClass = sak.status switch
                        {
                            "Ubehandlet" => "status-ikke-påbegynt",
                            "Under Behandling" => "status-in-progress",
                            "Løst" => "status-completed",
                            "Avvist" => "status-closed",
                            "Arkivert" => "status-arkivert", // Added case for 'Arkivert'
                            _ => string.Empty
                        };
                       
                        <li style="list-style-type: none;">
                            <strong>@sak.Kommunenavn</strong> -
                            <strong>Status: <span class="@statusClass">@sak.status</span></strong> -
                            Opprettet: @sak.opprettet_dato.ToString("d")
                            <form class="hidden-form" asp-controller="Bruker" asp-action="DeleteCase" method="post">
                                <input type="hidden" name="id" value="@sak.id" />
                                <button class="btn-danger" type="submit" onclick="return confirm('Er du sikker på at du vil slette denne saken?');">
                                    Slett sak
                                </button>
                            </form>
                            <div id="commentsSection" data-sakid='@sak.id'>
                                <h4 class="ubuntu-light" style="text-align: center; letter-spacing: 1px; ">Kommentarer</h4>
                                <div class="separator"></div>
                                <ul id="commentsList"></ul>

                            
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>Du har ingen saker.</p>
            }
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Get sakId from the data attribute of the div
            var sakID = $('#commentsSection').data('sakid'); // Access sak.id from the div

            $.ajax({
                url: '/Bruker/GetComments',  // URL to controller's GetComments method
                type: 'GET',
                data: { sakId: sakID },  // Pass sakID to the request
                success: function (result) {
                    if (result.success) {
                        // Clear the comment list before adding new comments
                        $('#commentsList').empty();

                        // Add each comment to the list
                        result.kommentarer.forEach(function (kommentar) {
                            var commentText = kommentar.tekst;
                            var commentDate = kommentar.dato;
                            var commentAuthor = kommentar.epost;
                            var truncatedText = truncateText(commentText, 50);

                            var commentElement = $('<li class="comment comment-collapsed"></li>')
                                .text(truncatedText)
                                .data('fullText', commentText); // Store full text in data-fullText attribute
                            $('#commentsList').append(commentElement);

                            // Create the comment info element
                            var commentInfoElement = $('<li class="commentInfo"></li>')
                                .text(commentDate + ' av ' + commentAuthor);

                            $('#commentsList').append(commentInfoElement);
                        });
                    } else {
                        console.log('Kunne ikke hente kommentarer: ' + result.message);
                    }
                },
                error: function () {
                    console.log('En feil oppstod under henting av kommentarer.');
                }
            });
        });

        // Helper function to truncate text if it exceeds the specified length
        function truncateText(text, length) {
            return text.length > length ? text.substring(0, length) + '...' : text;
        }
    </script>
</div>
@{
    ViewData["RenderFooter"] = true;
}