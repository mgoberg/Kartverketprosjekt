@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Saksbehandler";
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <style>
        /* STYLING ER LAGT HER MIDLERTIDIG */
        table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
        }

        table, th, td {
            border: 1px solid black;
        }

        th {
            background-color: green;
            color: white;
        }

        th, td {
            padding: 8px;
            text-align: left;
            height: 20px; /* Endre på størrelsen til rowsa */
        }

        /* dashboard og kart container */
        .container {
            display: flex;
            flex-direction: column;
            height: 100vh; /* Full height of the viewport */
        }

     
        .upper-section {
            flex: 1; /* Take up the top half of the screen */
        }

        /* Lower section for the dashboard and map, sharing space vertically */
        .lower-section {
            flex: 1;
            display: flex;
        }

        .dashboard, #map {
            width: 50%; /* Dashboard and map share equal space horizontally */
            padding: 20px;
            border: 1px solid #ddd;
        }

        #map {
            height: 100%;
        }
    </style>
</head>
<body>
    <h2>
        Saksoversikt
    </h2>

    <div class="container">
        <!-- Upper section: Full-width table -->
        <div class="upper-section">
            <table id="casesTable">
                <thead>
                    <tr>
                        <th>BrukerID</th>
                        <th>Navn</th>
                        <th>Beskrivelse</th>
                        <th>Status</th>
                        <th>Telefon</th>
                    </tr>
                </thead>
                <tbody>
                    <tr data-geojson='{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[7.909303,58.075045]}}'>
                        <td>1</td>
                        <td>Ola Nordmann</td>
                        <td>Feil i kartet</td>
                        <td>Åpen</td>
                        <td>12345678</td>
                    </tr>
                    <tr data-geojson='{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[7.909,58.08]}}'>
                        <td>2</td>
                        <td>Kari Nordmann</td>
                        <td>Veien er feil</td>
                        <td>Under behandling</td>
                        <td>87654321</td>
                    </tr>
                    <tr data-geojson='{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[7.92,58.07]}}'>
                        <td>3</td>
                        <td>Nils Hansen</td>
                        <td>Kystlinjen er feil</td>
                        <td>Lukket</td>
                        <td>45678912</td>
                    </tr>
                    <tr data-geojson='{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[7.91,58.06]}}'>
                        <td>4</td>
                        <td>Anne Olsen</td>
                        <td>Feil på stier</td>
                        <td>Åpen</td>
                        <td>65432109</td>
                    </tr>
                    <tr data-geojson='{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[7.93,58.05]}}'>
                        <td>5</td>
                        <td>Per Pettersen</td>
                        <td>Manglende vei</td>
                        <td>Åpen</td>
                        <td>23456789</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Lower section: Dashboard and Map share space vertically -->
        <div class="lower-section">
            <!-- Dashboard section -->
            <div class="dashboard">
                <h3>Dashboard</h3>
                <p><strong>BrukerID:</strong> <span id="dashboardBrukerID">-</span></p>
                <p><strong>Navn:</strong> <span id="dashboardNavn">-</span></p>
                <p><strong>Beskrivelse:</strong> <span id="dashboardBeskrivelse">-</span></p>
                <p><strong>Status:</strong> <span id="dashboardStatus">-</span></p>
                <p><strong>Telefon:</strong> <span id="dashboardTelefon">-</span></p>
                <!-- Dropdown to change status -->
                <label for="changeStatus">Endre status:</label>
                <select id="changeStatus">
                    <option value="Åpen">Åpen</option>
                    <option value="Under behandling">Under behandling</option>
                    <option value="Lukket">Lukket</option>
                </select>
            </div>

            <!-- Leaflet map -->
            <div id="map"></div>
        </div>
    </div>

    <script>
        // Initialize the map
        var map = L.map('map').setView([58.075045, 7.909303], 10);

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var marker;

        // Function to set the map view to the selected coordinates
        function updateMap(geojson) {
            var coordinates = geojson.geometry.coordinates;

            // If a marker already exists, remove it
            if (marker) {
                map.removeLayer(marker);
            }

            // Add a new marker
            marker = L.marker([coordinates[1], coordinates[0]]).addTo(map);
            map.setView([coordinates[1], coordinates[0]], 13);
        }

        // jQuery function to handle row click and update dashboard
        $(document).ready(function () {
            $('#casesTable tbody tr').click(function () {
                // Get data from the clicked row
                var brukerID = $(this).find('td:eq(0)').text();
                var navn = $(this).find('td:eq(1)').text();
                var beskrivelse = $(this).find('td:eq(2)').text();
                var status = $(this).find('td:eq(3)').text();
                var telefon = $(this).find('td:eq(4)').text();
                var geojson = $(this).data('geojson');

                // Update dashboard with clicked row data
                $('#dashboardBrukerID').text(brukerID);
                $('#dashboardNavn').text(navn);
                $('#dashboardBeskrivelse').text(beskrivelse);
                $('#dashboardStatus').text(status);
                $('#dashboardTelefon').text(telefon);

                // Set the status dropdown to the current status
                $('#changeStatus').val(status);

                // Update the map with the new coordinates
                updateMap(geojson);
            });

            // Change status event
            $('#changeStatus').change(function () {
                var newStatus = $(this).val();
                $('#dashboardStatus').text(newStatus);
                // Additional logic can be added here to update the status in the database
            });
        });
    </script>
</body>
