@model kartverketprosjekt.Models.SakModel

@{
    ViewData["Title"] = "Registrer endring";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

<h2>Korriger ved å tegne i kartet:</h2>


<div class="flex-row">
    <div class="element1">
        <div id="map">
            <div id="verticalButtonContainer">
                <button id="toggleButton">
                    <i class='bx bx-layer' id="layers"></i>
                </button>
                <button id="geolocateButton">
                    <i class='bx bx-current-location' id="cross"></i>
                </button>
                <button id="fullscreenButton">
                    <i class='bx bx-fullscreen' id="fullscreen"></i>
                </button>
            </div>
             <div id="buttonContainer">
            <div>
                <button id="btn-changeToLand" onclick="changeToLand()"></button>
            </div>
            <div>
                <button id="btn-changeToGrey" onclick="changeToGrey()"></button>
            </div>
            <div>
                <button id="btn-changeToRaster" onclick="changeToRaster()"></button>
            </div>
            <div>
                <button id="btn-changeToSea" onclick="changeToSea()"></button>
            </div>
    </div>
            

        </div>
    </div>
    <div class="element2">
        <form id="areaChangeForm" asp-controller="Sak" asp-action="RegisterAreaChange" method="post" enctype="multipart/form-data">
            <!-- Skjult felt for GeoJSON-data -->
            <input type="hidden" class="form-control" id="geoJsonInput" name="geojson_data" readonly>

            <!-- Beskrivelse (påkrevd) -->
            <label for="beskrivelse">Beskrivelse:</label>
            <textarea class="form-control" id="beskrivelse" name="beskrivelse" required></textarea>

            <!-- Opplastning av vedlegg (valgfritt) -->
            <label for="vedlegg">Vedlegg (valgfritt):</label>
            <input type="file" class="form-control" id="vedlegg" name="vedlegg">

            <!-- Layer URL  -->


            <!-- Skjult felt for kommune ID -->
            <input type="hidden" name="kommune_id" value="1">

            <!-- Skjult felt for status -->
            <input type="hidden" name="status" value="Påbegynt">

            <!-- Send-knapp PLACEHOLDER -> SKAL SPAWNE MODAL FOR CONFIRMATION TODO TODO TODO -->
            <button type="submit" class="btn btn-primary">Send inn</button>
        </form>
    </div>
</div>



@section Scripts {
    
    <script>
            //simulerer at brukeren trykker på knappen for å endre til land for å ha det som initielle kartlag. hvis ikke blir ikke kart url'en sendt med form dataen
        document.addEventListener('DOMContentLoaded', function () {  
            changeToLand();
        });

        function changeToLand() {
            changeTileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', '&copy; <a href="http://www.kartverket.no/">Kartverket</a>', 'btn-changeToLand');
        }
        
        var searchControl = new L.esri.Controls.Geosearch().addTo(map);// Add the geocoding searchbar

        document.querySelector('.geocoder-control').style.zIndex = '2000';

        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                rectangle: true,
                circle: false,
                marker: true,
                circlemarker: false
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        map.on(L.Draw.Event.CREATED, function (e) {
            var type = e.layerType,
                layer = e.layer;

            drawnItems.addLayer(layer);

            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);

            document.getElementById('geoJsonInput').value = geoJsonString;
        });

        /**
        * Event listener for the form submission.
        * Prevents the default form submission behavior, captures the URL of the current TileLayer,
        * creates a hidden input to store the TileLayer URL, appends the hidden input to the form,
        * and submits the form.
        */
        document.getElementById('areaChangeForm').addEventListener('submit', function (event) {
            // Prevent the default form submission
            event.preventDefault();

            // Capture the URL of the current TileLayer
            var tileLayerUrl = map._layers[Object.keys(map._layers)[1]]._url;

            // Create a hidden input to store the TileLayer URL
            var mapStateInput = document.createElement('input');
            mapStateInput.type = 'hidden';
            mapStateInput.name = 'layerurl';
            mapStateInput.value = tileLayerUrl;

            // Append the hidden input to the form
            this.appendChild(mapStateInput);

            // Submit the form
            this.submit();
        });
    </script>

    
}



